trigger:
- master

jobs:
  - job: Build
    pool:
      vmImage: 'Ubuntu-16.04'
    strategy:
      matrix:
        TpmWolf:
          Target: fTPM
          Crypto: CFG_FTPM_USE_WOLF=y
          ArtifactName: ftpm_wolf
        TpmOSSL:
          Target: fTPM
          Crypto: CFG_FTPM_USE_WOLF=n
          ArtifactName: ftpm_ossl
        AuthvarsWolf:
          Target: AuthVars
          Crypto: CFG_AUTHVARS_USE_WOLF=y
          ArtifactName: authvars_wolf
        AuthvarsOSSL:
          Target: AuthVars
          Crypto: CFG_AUTHVARS_USE_WOLF=n
          ArtifactName: authvars_ossl

    steps:
    - script: |
        cd ..
        git clone https://github.com/ms-iot/optee_os.git
      displayName: Clone OP-TEE

    - script: |
        wget https://releases.linaro.org/components/toolchain/binaries/6.4-2017.11/arm-linux-gnueabihf/gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf.tar.xz
        tar xf gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf.tar.xz
      displayName: Download GCC
    
    - script: |
        cd ../optee_os
        CROSS_COMPILE=$(Build.SourcesDirectory)/gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf- make PLATFORM=imx-mx6qhmbedge CFG_TEE_CORE_LOG_LEVEL=4 CFG_REE_FS=n CFG_RPMB_FS=y CFG_RPMB_TESTKEY=y CFG_RPMB_WRITE_KEY=y CPPFLAGS="-fshort-wchar"
      displayName: Build OP-TEE

    - script: |
        ls
        cd TAs/optee_ta/$(Target)
        make $(Crypto) TA_CPU=cortex-a9 TA_CROSS_COMPILE=$(Build.SourcesDirectory)/gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf- CROSS_COMPILE=$(Build.SourcesDirectory)/gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf- TA_DEV_KIT_DIR=$(Build.SourcesDirectory)/../optee_os/out/arm-plat-imx/export-ta_arm32
      displayName: Build TA

    - task: CopyFiles@2
      inputs:
        Contents: |
          TAs/optee_ta/out/$(Target)/*.ta
          TAs/optee_ta/out/$(Target)/*.elf
        targetFolder: $(Build.ArtifactStagingDirectory)/$(ArtifactName)


    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: $(ArtifactName)
        targetPath: $(Build.ArtifactStagingDirectory)

    - script: |
        python3 external/build_cgmanifest.py external/cgmanifest_template.json
        cat cgmanifest.json
      displayName: Generate dynamic cgmanifest.json
      
    - task: ComponentGovernanceComponentDetection@0

  - job: Test
    pool:
      vmImage: 'vs2017-win2016'
    strategy:
      matrix:
        TpmWolf:
          ArtifactName: ftpm_wolf
        TpmOSSL:
          ArtifactName: ftpm_ossl
        AuthvarsWolf:
          ArtifactName: authvars_wolf
        AuthvarsOSSL:
          ArtifactName: authvars_ossl
    dependsOn: Build

    steps:
    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'ftpm_wolf'
        downloadPath: '$(Build.ArtifactStagingDirectory)'

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'ftpm_ossl'
        downloadPath: '$(Build.ArtifactStagingDirectory)'

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'authvars_wolf'
        downloadPath: '$(Build.ArtifactStagingDirectory)'

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'authvars_ossl'
        downloadPath: '$(Build.ArtifactStagingDirectory)'
    
    - script: |
        cd $(Build.ArtifactStagingDirectory)
        dir

    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'TA_Binaries'
        targetPath: $(Build.ArtifactStagingDirectory)

